import{_ as s,c as a,o as n,a as l}from"./app.f541f39d.js";const A=JSON.parse('{"title":"Plug-in Development Guide","description":"","frontmatter":{},"headers":[{"level":2,"title":"Structural specification","slug":"structural-specification","link":"#structural-specification","children":[{"level":3,"title":"Import verification","slug":"import-verification","link":"#import-verification","children":[]}]},{"level":2,"title":"Development specifications","slug":"development-specifications","link":"#development-specifications","children":[{"level":3,"title":"Function class","slug":"function-class","link":"#function-class","children":[]},{"level":3,"title":"Parameter verification class","slug":"parameter-verification-class","link":"#parameter-verification-class","children":[]},{"level":3,"title":"Function function","slug":"function-function","link":"#function-function","children":[]},{"level":3,"title":"Tools","slug":"tools","link":"#tools","children":[]},{"level":3,"title":"Register meta information","slug":"register-meta-information","link":"#register-meta-information","children":[]},{"level":3,"title":"Routing and forwarding details","slug":"routing-and-forwarding-details","link":"#routing-and-forwarding-details","children":[]}]},{"level":2,"title":"Register EntryPoint Group","slug":"register-entrypoint-group","link":"#register-entrypoint-group","children":[]},{"level":2,"title":"Release package","slug":"release-package","link":"#release-package","children":[{"level":3,"title":"Package management instructions","slug":"package-management-instructions","link":"#package-management-instructions","children":[]},{"level":3,"title":"CI automatic release","slug":"ci-automatic-release","link":"#ci-automatic-release","children":[]}]}],"relativePath":"en/plugin/basic.md","lastUpdated":1697372692000}'),e={name:"en/plugin/basic.md"},o=l(`<h1 id="plug-in-development-guide" tabindex="-1">Plug-in Development Guide <a class="header-anchor" href="#plug-in-development-guide" aria-hidden="true">#</a></h1><p>The sample plugin library used in this article: <a href="https://github.com/LlmKira/llmbot_plugin_bilisearch" target="_blank" rel="noreferrer">https://github.com/LlmKira/llmbot_plugin_bilisearch</a></p><p>OpenaiBot provides an OPENAPI registration system for third-party plugins.</p><p><strong>This article will introduce how to build a plugin.</strong></p><h2 id="structural-specification" tabindex="-1">Structural specification <a class="header-anchor" href="#structural-specification" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">INTRO</span></span>
<span class="line"><span style="color:#A6ACCD;">├── LICENSE</span></span>
<span class="line"><span style="color:#A6ACCD;">├── llmbot_plugin_bilisearch</span></span>
<span class="line"><span style="color:#A6ACCD;">│ └─ __init__.py</span></span>
<span class="line"><span style="color:#A6ACCD;">├── poetry.lock</span></span>
<span class="line"><span style="color:#A6ACCD;">├── pyproject.toml</span></span>
<span class="line"><span style="color:#A6ACCD;">└── README.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>README.md</code> is the project description file.</p><p><code>pyproject.toml</code> is the package information file of the project, including the name of the package, dependencies, author, home page and other configurations. See <a href="https://python-poetry.org/docs/pyproject/" target="_blank" rel="noreferrer">detailed options</a>.</p><p><code>poetry.lock</code> is a project dependency lock file that locks the warehouse dependency version so that all collaborators use the same version of dependency. This file needs to be updated using the <code>poetry lock</code> command when updating dependent versions.</p><p><code>llmbot_plugin_bilisearch</code> is the main body of the plug-in in the example, and contains the real execution file and resources of the plug-in.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Because pypi does not allow uploading large files, the plug-in packaging folder should not upload large resource files.</p></div><p><code>LICENSE</code> is the open source agreement file of the project and has certain legal effect. To select a protocol, please refer to <a href="https://www.zhihu.com/question/19568896" target="_blank" rel="noreferrer">Zhihu Question</a>.</p><h3 id="import-verification" tabindex="-1">Import verification <a class="header-anchor" href="#import-verification" aria-hidden="true">#</a></h3><p>First make sure you have installed a code editor and Python environment (version greater than 3.9). In the Shell console or CMD command line, enter <code>python -v</code> to check or view the version.</p><h4 id="download-the-required-tools" tabindex="-1">Download the required tools <a class="header-anchor" href="#download-the-required-tools" aria-hidden="true">#</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pip install llmkira</span></span>
<span class="line"><span style="color:#A6ACCD;">pip install poetry</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>llmkira</code> is a packaged collection of robot main files, and the plug-in needs to import the classes in it for use. There is an imported <a href="https://github.com/LlmKira/llmbot_plugin_bilisearch/blob/main/llmbot_plugin_bilisearch/__init__.py" target="_blank" rel="noreferrer">example</a>.</p><p><code>poetry</code> is a widely used dependency management and packaging tool. <a href="https://python-poetry.org/docs/basic-usage/" target="_blank" rel="noreferrer">Introduction to basic commands</a>.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>poetry</code> Common commands include</p><ul><li><code>poetry init</code> creates a <code>pyproject.toml</code> file</li><li><code>poetry lock</code> updates dependent locks</li><li><code>poetry add &lt;name&gt;</code> Add dependencies</li><li><code>poetry install</code> installs the current library into the local environment</li><li><code>poetry build</code> build library</li><li><code>poetry publish</code> publishing library</li></ul></div><p>Create a new project on Github and pull it locally.</p><p>Use a code editor to open the local project folder, then create the plug-in folder, open a Shell at the current project location and enter <code>poetry init</code> to establish the basic package structure.</p><p>Complete the <code>pyproject.toml</code> file by entering the required information.</p><p>Use the <code>poetry add &lt;some&gt;</code> command or edit the configuration file to add dependencies.</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">dependencies</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">python </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^3.9</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">bilibili-api-python </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^16.1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>At this point, the basic structure of the project has been established.</p><h2 id="development-specifications" tabindex="-1">Development specifications <a class="header-anchor" href="#development-specifications" aria-hidden="true">#</a></h2><p>The plug-in is internally composed of function classes, tool classes, meta information, functional functions, and parameter verification classes.</p><p>The plug-in name within the function must be referenced by the <code>__plugin_name__</code> parameter.</p><h3 id="function-class" tabindex="-1">Function class <a class="header-anchor" href="#function-class" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bilibili </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Search videos on bilibili.com(bilibili)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">bilibili</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_property</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">property_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">keywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">property_description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Keywords entered in the search box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">property_type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">required</span><span style="color:#89DDFF;">=True</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>The information here will be submitted to LLM for use, and you can use the <code>Prompt project</code> to improve them.</p><p>The <code>required</code> attribute is not necessarily valid.</p><h3 id="parameter-verification-class" tabindex="-1">Parameter verification class <a class="header-anchor" href="#parameter-verification-class" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> pydantic </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> BaseModel</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Bili</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">BaseModel</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">     keywords</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">     classConfig</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">         extra </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">allow</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Please use pydantic for parameter verification in the <code>run</code> method of the tool class.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   _set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Bili</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse_obj</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arg</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">   ...</span></span>
<span class="line"></span></code></pre></div><h3 id="function-function" tabindex="-1">Function function <a class="header-anchor" href="#function-function" aria-hidden="true">#</a></h3><p>This function is free to use, but the OPENAPI architecture later needs to match an error decorator to count errors. Therefore, it is recommended to write a main function to facilitate subsequent upgrades.</p><h3 id="tools" tabindex="-1">Tools <a class="header-anchor" href="#tools" aria-hidden="true">#</a></h3><p>All tool classes must inherit <a href="https://github.com/LlmKira/Openaibot/blob/main/llmkira/sdk/func_calling/schema.py#L14" target="_blank" rel="noreferrer">BaseTool</a>.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseTool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ABC</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseModel</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     Basic tool class, all tool classes should inherit this class</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">     silent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Whether the parameters of the created function are hidden</span></span>
<span class="line"><span style="color:#A6ACCD;">     function</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Function </span><span style="color:#676E95;font-style:italic;"># Function class</span></span>
<span class="line"><span style="color:#A6ACCD;">     keywords</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Register keywords</span></span>
<span class="line"><span style="color:#A6ACCD;">     pattern</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">re</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Pattern</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#Register regular pattern</span></span>
<span class="line"><span style="color:#A6ACCD;">     require_auth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#Whether the user is required to confirm execution</span></span>
<span class="line"><span style="color:#A6ACCD;">     repeatable</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func_message</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">message_text</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">pass</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#Rule check, if it returns True then candidate it in the request</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pre_check</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Union</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">bool</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         Pre-check, if it is not qualified, it returns False, if it is qualified, it returns True.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         Returns a string indicating unqualified status with a reason</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         If the check fails, you cannot be a candidate.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         run</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">failed</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">platform</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">reason</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         Conveniently given</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">         </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span></code></pre></div><p>In order to increase capacity &amp; reduce costs, the plug-in selector determines which functions are candidate functions based on character matching. The <code>keywords</code> and <code>pattern</code> parameters determine whether this function is a candidate for this conversation.</p><p>Please consider internationalization when constructing keyword parameters, and try to avoid public keywords, and single-word keywords are prohibited.</p><p><strong>Use of <code>__init__</code> initialization is prohibited.</strong></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>async def callback The function is of no use at the moment.</p></div><h3 id="register-meta-information" tabindex="-1">Register meta information <a class="header-anchor" href="#register-meta-information" aria-hidden="true">#</a></h3><p>Core class <code>PluginMetadata</code>, you can view its composition structure <a href="https://github.com/LlmKira/Openaibot/blob/main/llmkira/sdk/func_calling/schema.py#L84" target="_blank" rel="noreferrer">here</a>.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># name</span></span>
<span class="line"><span style="color:#A6ACCD;">__plugin_name__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">search_in_bilibili</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#The middle is the function code...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Core meta information</span></span>
<span class="line"><span style="color:#A6ACCD;">__plugin_meta__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PluginMetadata</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Search videos on bilibili.com(bilibili)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">usage</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bilibili search &lt;keywords&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">openapi_version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">20231013</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">function</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#82AAFF;">         FuncPair</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">function</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">bilibili</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">tool</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">BiliBiliSearch</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>FuncPair</code> binds <code>function</code> function class and <code>tool</code> tool class.</p></div><p>The <code>openapi_version</code> parameter records the current synchronized version. If the host framework is updated, the Plugin may need to synchronize this parameter to support the new interface.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The host can support multiple OPENAPI version architecture numbers.</p></div><h3 id="routing-and-forwarding-details" tabindex="-1">Routing and forwarding details <a class="header-anchor" href="#routing-and-forwarding-details" aria-hidden="true">#</a></h3><p>We communicate to each platform by referencing the task class <code>Task</code>. Specific examples are as follows:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">task_meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">child</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward_reprocess</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TaskHeader</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Callback</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">role</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Task</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">queue</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">platform</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">send_task</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">TaskHeader</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">         </span><span style="color:#A6ACCD;font-style:italic;">sender</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">sender</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#676E95;font-style:italic;">#Inherit the sender</span></span>
<span class="line"><span style="color:#82AAFF;">         </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#676E95;font-style:italic;"># Because there may be forwarding, it can be configured alone</span></span>
<span class="line"><span style="color:#82AAFF;">         </span><span style="color:#A6ACCD;font-style:italic;">task_meta</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">_meta</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">         </span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#89DDFF;">=[</span></span>
<span class="line"><span style="color:#82AAFF;">             RawMessage</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                 </span><span style="color:#A6ACCD;font-style:italic;">user_id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">user_id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                 </span><span style="color:#A6ACCD;font-style:italic;">chat_id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">chat_id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                 </span><span style="color:#A6ACCD;font-style:italic;">text</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">_search_result</span></span>
<span class="line"><span style="color:#82AAFF;">             </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">         </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>Among them, the <code>task_meta</code> parameter must be cloned from the <code>child</code> function of <code>task_meta</code> passed by the function.</p><p>Generally there are the following modes:</p><h4 id="forward-reprocessing" tabindex="-1">Forward reprocessing <a class="header-anchor" href="#forward-reprocessing" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward_reprocess</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TaskHeader</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Callback</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">role</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">     </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>After forwarding, <code>callback</code> will overwrite the message sender. At the same time, if <code>callback_forward</code> is <code>True</code>, it will be forwarded to the plug-in processing area and written back into the message record.</p><p>If <code>callback_forward_reprocess</code> is <code>True</code>, llm will inspect the message content with the function disabled.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Modification of <code>co is prohibitedntinue_step</code> and <code>limit_child</code> attributes, affecting the recursion depth.</p></div><h4 id="forward" tabindex="-1">Forward <a class="header-anchor" href="#forward" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">reprocess_needed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span></span>
<span class="line"></span></code></pre></div><h2 id="register-entrypoint-group" tabindex="-1">Register EntryPoint Group <a class="header-anchor" href="#register-entrypoint-group" aria-hidden="true">#</a></h2><p><a href="https://python-poetry.org/docs/pyproject/#plugins" target="_blank" rel="noreferrer">https://python-poetry.org/docs/pyproject/#plugins</a></p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">plugins</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">&quot;llmkira</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">extra</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">plugin&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># The entrypoint name is the name of the plugin.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Both front and back must be unique, which will be used when registering hooks.</span></span>
<span class="line"><span style="color:#A6ACCD;">bilisearch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">llmbot_plugin_bilisearch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>After the equal sign is the package name of the plug-in, and in front is the unique key (please make sure it does not conflict with other plug-ins)</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">llmbot_plugin_bilisearch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You must register an EntryPoint to be retrieved by the bot launcher.</p></div><h2 id="release-package" tabindex="-1">Release package <a class="header-anchor" href="#release-package" aria-hidden="true">#</a></h2><p><code>poetry publish</code> publishes the package, or uses CI to publish automatically.</p><h3 id="package-management-instructions" tabindex="-1">Package management instructions <a class="header-anchor" href="#package-management-instructions" aria-hidden="true">#</a></h3><p>Every time you upgrade, update the <code>version</code> field.</p><h3 id="ci-automatic-release" tabindex="-1">CI automatic release <a class="header-anchor" href="#ci-automatic-release" aria-hidden="true">#</a></h3><p>Write the following content in the <code>.github/workflows/publish.yml</code> file:</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">tags</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">-v*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">release</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Publish python package</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">JRubics/poetry-publish@v1.16</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#F07178;">pypi_token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ secrets.PYPI_TOKEN }}</span></span>
<span class="line"></span></code></pre></div><p>Create a new <code>Release</code> in the lower right corner of the Github repo page.</p>`,77),p=[o];function t(c,r,i,y,F,D){return n(),a("div",null,p)}const C=s(e,[["render",t]]);export{A as __pageData,C as default};
