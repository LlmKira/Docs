import{_ as e,c as a,o as t,a as r}from"./app.20d1bb53.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"笔记","slug":"笔记","link":"#笔记","children":[{"level":3,"title":"应用尝试","slug":"应用尝试","link":"#应用尝试","children":[]},{"level":3,"title":"信息层次","slug":"信息层次","link":"#信息层次","children":[]},{"level":3,"title":"Some refer","slug":"some-refer","link":"#some-refer","children":[]},{"level":3,"title":"Info","slug":"info","link":"#info","children":[]},{"level":3,"title":"ChatGPT 的安全调整","slug":"chatgpt-的安全调整","link":"#chatgpt-的安全调整","children":[]}]},{"level":2,"title":"复刻结论","slug":"复刻结论","link":"#复刻结论","children":[]}],"relativePath":"note/bot.md","lastUpdated":1675393198000}'),l={name:"note/bot.md"},i=r('<h2 id="笔记" tabindex="-1">笔记 <a class="header-anchor" href="#笔记" aria-hidden="true">#</a></h2><blockquote><p>以后如果chatGPT开放接口会尝试做兼容。</p></blockquote><h3 id="应用尝试" tabindex="-1">应用尝试 <a class="header-anchor" href="#应用尝试" aria-hidden="true">#</a></h3><ul><li>基于检索的记忆池设计</li></ul><p>受限于模型的输入限制。在设计上，我采用基于上下文检索的记忆池作为增强手段，来实现 100 轮上下的检索技巧。</p><p>其中主要应用的是余弦相似度计算和主题匹配。</p><ul><li>聊天的角色增强</li></ul><p>让每个使用者可以自由定制，聊天框架通用且与 GPT3 Api 深度结合。</p><ul><li>安全性的增强</li></ul><p>接入了 Openai 的官方审核端点和DFA审查。改进了审查，无视了字符隔离，和支持简繁通杀。</p><ul><li>实时检索插件系统</li></ul><p>在 kira 包中，实现了一套实时支持系统，为用户提供即时的互联网信息。 逻辑即 检查文本条件后注入相应的文本。 但是这会导致错误。</p><ul><li>语音结合的尝试</li></ul><p>基于VITS项目，做到了语言识别并转语音输出的效果。</p><h3 id="信息层次" tabindex="-1">信息层次 <a class="header-anchor" href="#信息层次" aria-hidden="true">#</a></h3><p><code>x&gt;80</code> 忘记 <code>4&lt;x&lt;80</code> 中间记忆 <code>x&lt;4</code> 强记忆</p><h3 id="some-refer" tabindex="-1">Some refer <a class="header-anchor" href="#some-refer" aria-hidden="true">#</a></h3><p><em>InstructGPT 论文</em></p><p><a href="https://arxiv.org/pdf/2203.02155.pdf" target="_blank" rel="noreferrer">https://arxiv.org/pdf/2203.02155.pdf</a><a href="https://www.bilibili.com/video/BV1hd4y187CR" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1hd4y187CR</a></p><p><em>解释ChatGpt</em></p><p><a href="https://www.assemblyai.com/blog/how-chatgpt-actually-works/" target="_blank" rel="noreferrer">https://www.assemblyai.com/blog/how-chatgpt-actually-works/</a></p><h3 id="info" tabindex="-1">Info <a class="header-anchor" href="#info" aria-hidden="true">#</a></h3><p>ChatGPT 基于原始的 GPT-3 模型，但经过进一步训练，使用人工反馈来指导学习过程，具体目标是减轻模型的错位问题。</p><p>所使用的具体技术，称为从人类反馈中强化学习，是基于 先前的学术研究 。 ChatGPT 代表了 第一个将这种技术用于生产模型的案例。</p><p>根据 OpenAI 的说法，ChatGPT 已经 “使用与 InstructGPT 相同的方法进行训练，但数据收集设置略有不同”，ChatGPT 的论文尚未公开。</p><p><em>Codex</em></p><p>Codex 的中文效果不怎么好...</p><p><em>原始 GPT3</em></p><p>缺乏帮助：不遵循用户的明确指示。</p><p>幻觉：模型编造了不存在的或错误的事实。</p><p>缺乏可解释性：人类很难理解模型是如何做出特定决定或预测的。</p><p>生成有偏见或有毒的输出：在有偏见/有毒数据上训练的语言模型可能会在其输出中重现该结果，即使没有明确指示这样做。</p><h3 id="chatgpt-的安全调整" tabindex="-1">ChatGPT 的安全调整 <a class="header-anchor" href="#chatgpt-的安全调整" aria-hidden="true">#</a></h3><p>ChatGPT 在公测中不断完善其漏洞，便于以后的商业化推进。每个用户的对话记录会用于 需求分析 和 安全调整 中。</p><h2 id="复刻结论" tabindex="-1">复刻结论 <a class="header-anchor" href="#复刻结论" aria-hidden="true">#</a></h2><p>基于注入和检索强化的 GPT3 不能和 ChatGPT 竞争。</p>',36),h=[i];function p(o,d,n,c,s,f){return t(),a("div",null,h)}const m=e(l,[["render",p]]);export{_ as __pageData,m as default};
