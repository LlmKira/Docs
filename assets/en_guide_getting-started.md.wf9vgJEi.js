import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.D0kgyeKq.js";const F=JSON.parse('{"title":"📝 Deployment Guide","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/getting-started.md","filePath":"en/guide/getting-started.md","lastUpdated":1714557226000}'),n={name:"en/guide/getting-started.md"},t=e(`<h1 id="📝-deployment-guide" tabindex="-1">📝 Deployment Guide <a class="header-anchor" href="#📝-deployment-guide" aria-label="Permalink to &quot;📝 Deployment Guide&quot;">​</a></h1><h2 id="📦-system-check" tabindex="-1">📦 System Check <a class="header-anchor" href="#📦-system-check" aria-label="Permalink to &quot;📦 System Check&quot;">​</a></h2><p>For Debian servers, please make sure that your system locale is set to UTF8. Otherwise, use <code>dpkg-reconfigure locales</code> command to configure the language.</p><p>Please ensure that your server has more than <code>1GB</code> of memory.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>We have fallback options in case you don&#39;t deploy <code>Redis</code> and <code>MongoDB</code>. We will use an in-memory database in such cases, which is sufficient for general usage. However, if you need to store data for a long time, we recommend deploying <code>Redis</code> and <code>MongoDB</code>. But <code>RabbitMQ</code> is required.</p></div><h2 id="📦-quick-start" tabindex="-1">📦 Quick Start <a class="header-anchor" href="#📦-quick-start" aria-label="Permalink to &quot;📦 Quick Start&quot;">​</a></h2><p>If you are using a fresh server, you can use the following shell command to automatically install this project.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/LLMKira/Openaibot/main/deploy.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h2 id="🥽-manual-installation" tabindex="-1">🥽 Manual Installation <a class="header-anchor" href="#🥽-manual-installation" aria-label="Permalink to &quot;🥽 Manual Installation&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Voice dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install RabbitMQ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq:3.10-management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5672:5672</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 15672:15672</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RABBITMQ_DEFAULT_USER=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RABBITMQ_DEFAULT_PASS=8a8a8a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myRabbit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  rabbitmq:3.10-management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LlmKira/Openaibot/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Openaibot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pdm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.exp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start_sender.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start_receiver.py</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Host</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2.json</span></span></code></pre></div><h2 id="🥽-docker" tabindex="-1">🥽 Docker <a class="header-anchor" href="#🥽-docker" aria-label="Permalink to &quot;🥽 Docker&quot;">​</a></h2><p>Build Hub: <a href="https://hub.docker.com/repository/docker/sudoskys/llmbot/general" target="_blank" rel="noreferrer">sudoskys/llmbot</a></p><blockquote><p>Note that if you run this project using Docker, you will start Redis, MongoDB, and RabbitMQ. But if you&#39;re running locally, only RabbitMQ is required.</p></blockquote><ul><li><p>Uninstall old kernel if present using <code>pip uninstall llm-kira</code>.</p></li><li><p>Uninstall plugin development tools if present using <code>pip uninstall llmkira</code> (otherwise it will cause conflicts).</p></li><li><p>Make sure your Python version is 3.9 or above.</p></li><li><p>Install Docker</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Installation of Docker can be referred to in the <a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">official documentation</a>.</p><p>Installation of Docker Compose can be referred to in the <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">official documentation</a> or this <a href="https://krau.top/posts/install-docker-one-key" target="_blank" rel="noreferrer">blog post</a>.</p><p>Windows users can install <a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noreferrer">Docker Desktop</a>.</p><p><strong>Please make sure your databases are on the same bridge/local network, otherwise connection will fail.</strong></p></div><p>At this point, you can try using <a href="#🥣-docker">Docker to run the bot</a>. If you don&#39;t want to use Docker, you can continue reading.</p><h2 id="🍜-database-support" tabindex="-1">🍜 Database Support <a class="header-anchor" href="#🍜-database-support" aria-label="Permalink to &quot;🍜 Database Support&quot;">​</a></h2><h3 id="🍫-install-redis" tabindex="-1">🍫 Install Redis <a class="header-anchor" href="#🍫-install-redis" aria-label="Permalink to &quot;🍫 Install Redis&quot;">​</a></h3><p>There are two ways to install the caching database, you can choose one of them.</p><h4 id="install-via-command-line" tabindex="-1">Install via Command Line <a class="header-anchor" href="#install-via-command-line" aria-label="Permalink to &quot;Install via Command Line&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis.service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span></span></code></pre></div><h4 id="install-via-docker" tabindex="-1">Install via Docker <a class="header-anchor" href="#install-via-docker" aria-label="Permalink to &quot;Install via Docker&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis:latest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 6379:6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    redis:latest</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is recommended to add a password to prevent exposing the database to the public network.</p></div><h3 id="🥕-install-mongodb" tabindex="-1">🥕 Install MongoDB <a class="header-anchor" href="#🥕-install-mongodb" aria-label="Permalink to &quot;🥕 Install MongoDB&quot;">​</a></h3><h4 id="install-via-command-line-1" tabindex="-1">Install via Command Line <a class="header-anchor" href="#install-via-command-line-1" aria-label="Permalink to &quot;Install via Command Line&quot;">​</a></h4><p>Refer to the following articles to install MongoDB:</p><ul><li><a href="https://www.runoob.com/mongodb/mongodb-linux-install.html" target="_blank" rel="noreferrer">MongoDB Linux Installation Guide (Runoob)</a></li><li><a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noreferrer">Download MongoDB Community Server</a></li><li><a href="https://www.prisma.io/dataguide/mongodb/setting-up-a-local-mongodb-database" target="_blank" rel="noreferrer">Setting Up a Local MongoDB Database</a></li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is recommended to add a password to prevent exposing the database to the public network. The project default configuration is <code>mongodb://admin:8a8a8a@localhost:27017/</code>, you can configure it in <code>.env</code> file as per your requirement.</p><p>If you install MongoDB via the shell, use the <code>mongosh</code> command to enter the database, create a user, and query the DSN.</p></div><h4 id="install-via-docker-1" tabindex="-1">Install via Docker <a class="header-anchor" href="#install-via-docker-1" aria-label="Permalink to &quot;Install via Docker&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongo:latest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 27017:27017</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MONGO_INITDB_ROOT_USERNAME=&quot;admin&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MONGO_INITDB_ROOT_PASSWORD=&quot;8a8a8a&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  mongo:latest</span></span></code></pre></div><h3 id="🐰-install-message-queue" tabindex="-1">🐰 Install Message Queue <a class="header-anchor" href="#🐰-install-message-queue" aria-label="Permalink to &quot;🐰 Install Message Queue&quot;">​</a></h3><p>There are two ways to install the message queue, you can choose one of them.</p><h4 id="install-via-command-line-2" tabindex="-1">Install via Command Line <a class="header-anchor" href="#install-via-command-line-2" aria-label="Permalink to &quot;Install via Command Line&quot;">​</a></h4><p>To install RabbitMQ via the command line, please refer to the <a href="https://www.rabbitmq.com/install-debian.html" target="_blank" rel="noreferrer">official documentation</a> or this <a href="https://www.leeks.info/zh_CN/latest/Linux_Notes/rabbitmq/RabbitMQ.html" target="_blank" rel="noreferrer">blog post</a>.</p><h4 id="install-via-docker-2" tabindex="-1">Install via Docker <a class="header-anchor" href="#install-via-docker-2" aria-label="Permalink to &quot;Install via Docker&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install RabbitMQ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq:3.10-management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5672:5672</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 15672:15672</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RABBITMQ_DEFAULT_USER=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RABBITMQ_DEFAULT_PASS=8a8a8a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myRabbit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rabbitmq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  rabbitmq:3.10-management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p><code>RABBITMQ_DEFAULT_USER</code> and <code>RABBITMQ_DEFAULT_PASS</code> are the default username and password for RabbitMQ. You can modify them as per your requirement. It is recommended to modify them to prevent exposing the database to the public network.</p></div><h3 id="🛠-clone-the-project" tabindex="-1">🛠 Clone the Project <a class="header-anchor" href="#🛠-clone-the-project" aria-label="Permalink to &quot;🛠 Clone the Project&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LlmKira/Openaibot.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Openaibot</span></span></code></pre></div><ul><li>Configure the <code>.env</code> file</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.exp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><ul><li>⚙️ Install Dependencies</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pdm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bot</span></span></code></pre></div><h2 id="▶️-run" tabindex="-1">▶️ Run <a class="header-anchor" href="#▶️-run" aria-label="Permalink to &quot;▶️ Run&quot;">​</a></h2><p>It is recommended to use PM2 panel to run the bot.</p><h3 id="running-with-pm2" tabindex="-1">Running with PM2 <a class="header-anchor" href="#running-with-pm2" aria-label="Permalink to &quot;Running with PM2&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2.json</span></span></code></pre></div><p>Other commands</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Stop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Restart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Check status</span></span></code></pre></div><h3 id="running-with-shell" tabindex="-1">Running with Shell <a class="header-anchor" href="#running-with-shell" aria-label="Permalink to &quot;Running with Shell&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start_sender.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start_receiver.py</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Note</p><p>When you exit the current shell, the bot will also be closed. You can use the <code>nohup</code> command to keep the bot running. However, this is not recommended.</p></div><h2 id="🫙-runtime-configuration" tabindex="-1">🫙 Runtime Configuration <a class="header-anchor" href="#🫙-runtime-configuration" aria-label="Permalink to &quot;🫙 Runtime Configuration&quot;">​</a></h2><p>You can run the corresponding bot by configuring the required environment variables.</p><h3 id="🥽-common-runtime-environment-variables" tabindex="-1">🥽 Common Runtime Environment Variables <a class="header-anchor" href="#🥽-common-runtime-environment-variables" aria-label="Permalink to &quot;🥽 Common Runtime Environment Variables&quot;">​</a></h3><table><thead><tr><th>Variable Name</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>STOP_REPLY</code></td><td>1</td><td>If the value is 1, stop receiving replies</td></tr><tr><td><code>DEBUG</code></td><td>Debug</td><td>If configured with any value, long debug logs will be printed to the terminal.</td></tr></tbody></table><h3 id="🥛-telegram" tabindex="-1">🥛 Telegram <a class="header-anchor" href="#🥛-telegram" aria-label="Permalink to &quot;🥛 Telegram&quot;">​</a></h3><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TELEGRAM_BOT_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TELEGRAM_BOT_PROXY_ADDRESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = socks5://127.0.0.1:7890</span></span></code></pre></div><table><thead><tr><th>Variable Name</th><th>Description</th><th>How to Obtain</th></tr></thead><tbody><tr><td><code>TELEGRAM_BOT_TOKEN</code></td><td>Telegram Bot Token</td><td><a href="https://t.me/BotFather" target="_blank" rel="noreferrer">Telegram Bot</a></td></tr><tr><td><code>TELEGRAM_BOT_PROXY_ADDRESS</code></td><td>Aiohttp Proxy Address</td><td></td></tr></tbody></table><h3 id="🍖-discord" tabindex="-1">🍖 Discord <a class="header-anchor" href="#🍖-discord" aria-label="Permalink to &quot;🍖 Discord&quot;">​</a></h3><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DISCORD_BOT_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = Y0NzY0NzY0NzY0NzY0NzY0.DsYQDQ.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DISCORD_BOT_PREFIX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = !</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DISCORD_BOT_PROXY_ADDRESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = socks5://</span></span></code></pre></div><p>To apply for a Discord Bot, go to the <a href="https://discord.com/developers/applications" target="_blank" rel="noreferrer">official platform</a>.</p><p>Click on <code>oauth2/url-generator</code> and select the permission group <code>bot</code>. You need to select the following permissions:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Send Messages\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Read Message History\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Send Messages in Threads\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Attach Files\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Mention Everyone\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`Use Slash Commands\`</span></span></code></pre></div><p>Generate and copy the link to open it in a browser, select the server where you want to add the bot, and click <code>Authorize</code>.</p><h4 id="privileged-intent" tabindex="-1">Privileged Intent <a class="header-anchor" href="#privileged-intent" aria-label="Permalink to &quot;Privileged Intent&quot;">​</a></h4><p>To access more than 100 servers, you need to go to the Bot tab, open <code>Message Content Intent</code>, and participate in the verification required if you have more than 100 servers.</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">my_intents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Intents.GUILDS |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Intents.GUILD_MESSAGES |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Intents.DM_MESSAGES |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Intents.MESSAGE_CONTENT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Note</p><p>Once your bot reaches 100 or more servers, verification and approval will be required. <a href="https://support.discord.com/hc/en-us/articles/360040720412" target="_blank" rel="noreferrer">Notice</a></p></div><h3 id="🍗-slack" tabindex="-1">🍗 Slack <a class="header-anchor" href="#🍗-slack" aria-label="Permalink to &quot;🍗 Slack&quot;">​</a></h3><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SLACK_APP_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = xapp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SLACK_BOT_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = xoxb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SLACK_SIGNING_SECRET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = xxxxxxx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SLACK_BOT_PROXY_ADDRESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http</span></span></code></pre></div><p>To create an application in the Slack platform, add it to your workspace.</p><ul><li>Configuring the Keys</li></ul><p>On the homepage, find the <code>Signing Secret</code> tab to get the <code>SLACK_SIGNING_SECRET</code>.</p><p>Find the <code>App-Level Tokens</code> tab to get the <code>SLACK_APP_TOKEN</code>.</p><p>Open the Oauth tab, find the <code>Bot User OAuth Token</code>, and use it as the <code>SLACK_BOT_TOKEN</code>.</p><ul><li>Enable Socket Mode</li></ul><p>Enable <code>Socket Mode</code>.</p><ul><li>Enable Event Subscriptions</li></ul><p>Go to <code>Event Subscriptions</code> and enable it on the page, subscribe to the following events: <code>message.channels</code>, <code>message.im</code>, <code>message.groups</code>.</p><ul><li>Enable Read &amp; Write Permissions</li></ul><p>Go to <code>oauth</code>, find the <code>Bot Token Scopes</code>, and select the following scopes: <code>chat:write</code>, <code>channels:read</code>, <code>commands</code>, <code>files:read</code>, <code>files:write</code>, <code>im:read</code>, <code>im:history</code>, <code>group:history</code>, <code>im:write</code>, <code>channel:write</code>, <code>channel:history</code> (there may be additional scopes).</p><ul><li>Register All Slash Commands</li></ul><p>Go to <code>Slash Commands</code> and register all the slash commands. Refer to the <a href="/Docs/guide/command">Command Guide</a> for the command table.</p><p>Reinstall the app and invite your bot to the channels by calling it with <code>@BOT</code>.</p><h3 id="🍔-kook" tabindex="-1">🍔 Kook <a class="header-anchor" href="#🍔-kook" aria-label="Permalink to &quot;🍔 Kook&quot;">​</a></h3><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">KOOK_BOT_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890</span></span></code></pre></div><p>Go to <a href="https://developer.kookapp.cn" target="_blank" rel="noreferrer">Kook Developer Center</a>, create a new application on the top left corner.</p><p>Get and fill in your Kook bot token.</p><h2 id="🍤-configure-openai-endpoint" tabindex="-1">🍤 Configure OpenAI Endpoint <a class="header-anchor" href="#🍤-configure-openai-endpoint" aria-label="Permalink to &quot;🍤 Configure OpenAI Endpoint&quot;">​</a></h2><p>Login can be done in two ways.</p><ul><li><code>Login via url</code>: Use <code>/login &lt;a token&gt;$&lt;something like https://provider.com/login&gt;</code> to Login. The program posts the token to the interface to retrieve configuration information. <a href="https://github.com/LlmKira/Openaibot/blob/81eddbff0f136697d5ad6e13ee1a7477b26624ed/app/components/credential.py#L20" target="_blank" rel="noreferrer">How to develop this</a>.</li><li><code>Login</code>: Use <code>/login https://&lt;api endpoint&gt;/v1$&lt;api key&gt;$&lt;the model&gt;$&lt;tool model such as gpt-3.5-turbo&gt;</code> to login.</li></ul><p>Alternatively, you can configure a global model to be used by users who haven&#39;t logged in.</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>GLOBAL_OAI_KEY=sk-xxx</span></span>
<span class="line"><span>GLOBAL_OAI_MODEL=gpt-3.5-turbo</span></span>
<span class="line"><span>GLOBAL_OAI_TOOL_MODEL=gpt-3.5-turbo</span></span>
<span class="line"><span>GLOBAL_OAI_ENDPOINT=https://api.openai.com/v1/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p><code>GLOBAL_OAI_TOOL_MODEL</code> is the global tool model and is only used for logical judgment with a higher invocation frequency.</p></div><h3 id="🍟-using-non-openai-models" tabindex="-1">🍟 Using Non-OpenAI Models <a class="header-anchor" href="#🍟-using-non-openai-models" aria-label="Permalink to &quot;🍟 Using Non-OpenAI Models&quot;">​</a></h3><p>You can use <a href="https://github.com/Portkey-AI/gateway" target="_blank" rel="noreferrer">gateway</a> or <a href="https://github.com/songquanpeng/one-api" target="_blank" rel="noreferrer">one-api</a> as a converter. Alternatively, you can use online service providers such as <a href="https://www.ohmygpt.com" target="_blank" rel="noreferrer">OhMyGpt</a>.</p><p>If you are using Azure, make sure your version supports functions.</p>`,99),l=[t];function h(p,o,r,d,k,c){return i(),a("div",null,l)}const u=s(n,[["render",h]]);export{F as __pageData,u as default};
