import{_ as s,c as a,o as n,a as l}from"./app.f541f39d.js";const C=JSON.parse('{"title":"插件开发指南","description":"","frontmatter":{},"headers":[{"level":2,"title":"结构规范","slug":"结构规范","link":"#结构规范","children":[{"level":3,"title":"导入验证","slug":"导入验证","link":"#导入验证","children":[]}]},{"level":2,"title":"开发规范","slug":"开发规范","link":"#开发规范","children":[{"level":3,"title":"函数类","slug":"函数类","link":"#函数类","children":[]},{"level":3,"title":"参数校验类","slug":"参数校验类","link":"#参数校验类","children":[]},{"level":3,"title":"功能函数","slug":"功能函数","link":"#功能函数","children":[]},{"level":3,"title":"工具类","slug":"工具类","link":"#工具类","children":[]},{"level":3,"title":"注册元信息","slug":"注册元信息","link":"#注册元信息","children":[]},{"level":3,"title":"路由转发细则","slug":"路由转发细则","link":"#路由转发细则","children":[]}]},{"level":2,"title":"注册 EntryPoint Group","slug":"注册-entrypoint-group","link":"#注册-entrypoint-group","children":[]},{"level":2,"title":"发布包","slug":"发布包","link":"#发布包","children":[{"level":3,"title":"包管理说明","slug":"包管理说明","link":"#包管理说明","children":[]},{"level":3,"title":"CI自动发布","slug":"ci自动发布","link":"#ci自动发布","children":[]}]}],"relativePath":"plugin/basic.md","lastUpdated":1697372692000}'),p={name:"plugin/basic.md"},o=l(`<h1 id="插件开发指南" tabindex="-1">插件开发指南 <a class="header-anchor" href="#插件开发指南" aria-hidden="true">#</a></h1><p>本文所用示例插件库: <a href="https://github.com/LlmKira/llmbot_plugin_bilisearch" target="_blank" rel="noreferrer">https://github.com/LlmKira/llmbot_plugin_bilisearch</a></p><p>OpenaiBot 为第三方插件提供了 OPENAPI 接口注册系统，本文将介绍如何建造一个插件。</p><h2 id="结构规范" tabindex="-1">结构规范 <a class="header-anchor" href="#结构规范" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">基础结构示例</span></span>
<span class="line"><span style="color:#A6ACCD;">├── LICENSE</span></span>
<span class="line"><span style="color:#A6ACCD;">├── llmbot_plugin_bilisearch</span></span>
<span class="line"><span style="color:#A6ACCD;">│   └─ __init__.py</span></span>
<span class="line"><span style="color:#A6ACCD;">├── poetry.lock</span></span>
<span class="line"><span style="color:#A6ACCD;">├── pyproject.toml</span></span>
<span class="line"><span style="color:#A6ACCD;">└── README.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>README.md</code> 是项目的说明文件。</p><p><code>pyproject.toml</code> 是项目的包信息文件，包含包的名称，依赖,和作者，主页等配置。查看<a href="https://python-poetry.org/docs/pyproject/" target="_blank" rel="noreferrer">详细选项</a>。</p><p><code>poetry.lock</code> 是项目依赖锁文件，锁定仓库依赖版本，让所有协作者都使用统一版本依赖。此文件在更新依赖版本时候，需要使用 <code>poetry lock</code> 命令更新。</p><p><code>llmbot_plugin_bilisearch</code> 是示例中插件的主体，内含插件的真正执行文件和资源。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>因为 pypi 不允许上传大文件，故插件打包文件夹不应上传较大资源文件。</p></div><p><code>LICENSE</code> 是项目的开源协议文件，具有一定法律效力。选择协议可以参考 <a href="https://www.zhihu.com/question/19568896" target="_blank" rel="noreferrer">知乎问题</a>。</p><h3 id="导入验证" tabindex="-1">导入验证 <a class="header-anchor" href="#导入验证" aria-hidden="true">#</a></h3><p>首先确认您安装了一个代码编辑器，Python 环境(版本大于3.9)。在 Shell控制台 或 CMD命令行 输入 <code>python -v</code> 检查或查看版本。</p><h4 id="下载所需的工具" tabindex="-1">下载所需的工具 <a class="header-anchor" href="#下载所需的工具" aria-hidden="true">#</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pip install llmkira</span></span>
<span class="line"><span style="color:#A6ACCD;">pip install poetry</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>llmkira</code> 是机器人主体文件的打包集合，插件需要导入其中的类进行使用。这里有导入的<a href="https://github.com/LlmKira/llmbot_plugin_bilisearch/blob/main/llmbot_plugin_bilisearch/__init__.py" target="_blank" rel="noreferrer">示例</a>。</p><p><code>poetry</code> 是一个广泛使用的依赖管理和打包的工具。<a href="https://python-poetry.org/docs/basic-usage/" target="_blank" rel="noreferrer">基础命令介绍</a>。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>poetry</code> 常用命令有</p><ul><li><code>poetry init</code> 创建一个 <code>pyproject.toml</code> 文件</li><li><code>poetry lock</code> 更新依赖锁</li><li><code>poetry add &lt;name&gt;</code> 添加依赖</li><li><code>poetry install</code> 安装当前库到本地环境</li><li><code>poetry build</code> 构建库</li><li><code>poetry publish</code> 发布库</li></ul></div><p>在 Github 新建项目并拉取本地。</p><p>用代码编辑器打开本地项目文件夹，再建立插件文件夹，在当前项目位置打开 Shell 输入 <code>poetry init</code> 建立基础包结构。</p><p>输入所需信息完善 <code>pyproject.toml</code> 文件。</p><p>使用 <code>poetry add &lt;some&gt;</code> 命令或者编辑配置文件添加依赖。</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">dependencies</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">python </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^3.9</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">bilibili-api-python </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^16.1.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>至此，项目基本结构已经建立。</p><h2 id="开发规范" tabindex="-1">开发规范 <a class="header-anchor" href="#开发规范" aria-hidden="true">#</a></h2><p>插件内部由 函数类，工具类，元信息，功能函数，参数校验类 组成。</p><p>函数内插件名称<strong>必须</strong>由 <code>__plugin_name__</code> 参数引用。</p><h3 id="函数类" tabindex="-1">函数类 <a class="header-anchor" href="#函数类" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">bilibili </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Search videos on bilibili.com(哔哩哔哩)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">bilibili</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add_property</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">property_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">keywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">property_description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Keywords entered in the search box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">property_type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">required</span><span style="color:#89DDFF;">=True</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>这里的信息会被提交给LLM使用，你可以运用 <code>Prompt 工程</code> 来改进他们。</p><p><code>required</code> 属性不一定有效。</p><h3 id="参数校验类" tabindex="-1">参数校验类 <a class="header-anchor" href="#参数校验类" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> pydantic </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> BaseModel</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Bili</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">BaseModel</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    keywords</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        extra </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">allow</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>请您在 工具类 的 <code>run</code> 方法中使用 pydantic 做参数校验。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  _set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Bili</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse_obj</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">arg</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"></span></code></pre></div><h3 id="功能函数" tabindex="-1">功能函数 <a class="header-anchor" href="#功能函数" aria-hidden="true">#</a></h3><p>此函数自由发挥，但是之后的OPENAPI架构需要匹配一个错误装饰器来计数错误。故推荐编写一个主函数便于后续升级。</p><h3 id="工具类" tabindex="-1">工具类 <a class="header-anchor" href="#工具类" aria-hidden="true">#</a></h3><p>所有工具类必须继承 <a href="https://github.com/LlmKira/Openaibot/blob/main/llmkira/sdk/func_calling/schema.py#L14" target="_blank" rel="noreferrer">BaseTool</a>。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseTool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ABC</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseModel</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    基础工具类，所有工具类都应该继承此类</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    silent</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 创建函数的参数是否隐藏</span></span>
<span class="line"><span style="color:#A6ACCD;">    function</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Function </span><span style="color:#676E95;font-style:italic;"># 函数类</span></span>
<span class="line"><span style="color:#A6ACCD;">    keywords</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 注册关键词</span></span>
<span class="line"><span style="color:#A6ACCD;">    pattern</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Optional</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">re</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Pattern</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 注册正则</span></span>
<span class="line"><span style="color:#A6ACCD;">    require_auth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 是否需要用户确认执行</span></span>
<span class="line"><span style="color:#A6ACCD;">    repeatable</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func_message</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">message_text</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 规则检查，如果返回True则在请求中候选它</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pre_check</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Union</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">bool</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">str</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        预检查，如果不合格则返回False，合格则返回True</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        返回字符串表示不合格，且有原因</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        检查失败则无法被候选</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        运行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">failed</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;font-style:italic;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">platform</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">reason</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        方便给的</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        </span><span style="color:#89DDFF;font-style:italic;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span></code></pre></div><p>为了提高容量&amp;降低成本，插件选择器会根据字符匹配确定哪些是候选函数， <code>keywords</code> 和 <code>pattern</code> 参数决定了此次对话是否候选此函数。</p><p>构建关键词参数时请考虑国际化，且尽量避开公共关键词，禁止使用单字关键词。</p><p><strong>禁止使用 <code>__init__</code> 初始化。</strong></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>async def callback 函数暂时没有任何用。</p></div><h3 id="注册元信息" tabindex="-1">注册元信息 <a class="header-anchor" href="#注册元信息" aria-hidden="true">#</a></h3><p>核心类 <code>PluginMetadata</code> ，您可以在 <a href="https://github.com/LlmKira/Openaibot/blob/main/llmkira/sdk/func_calling/schema.py#L84" target="_blank" rel="noreferrer">这里</a> 查看它的组成结构。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 名称</span></span>
<span class="line"><span style="color:#A6ACCD;">__plugin_name__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">search_in_bilibili</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 中间是函数代码......</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 核心元信息</span></span>
<span class="line"><span style="color:#A6ACCD;">__plugin_meta__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PluginMetadata</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Search videos on bilibili.com(哔哩哔哩)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">usage</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bilibili search &lt;keywords&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">openapi_version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">20231013</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">function</span><span style="color:#89DDFF;">={</span></span>
<span class="line"><span style="color:#82AAFF;">        FuncPair</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">function</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">bilibili</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">tool</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">BiliBiliSearch</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>FuncPair</code> 绑定 <code>function</code> 函数类和 <code>tool</code> 工具类。</p></div><p><code>openapi_version</code> 参数记录当前同步版本，如果宿主框架更新，Plugin 可能需要同步此参数以支持新接口。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>宿主可以支持多个 OPENAPI 版本架构号。</p></div><h3 id="路由转发细则" tabindex="-1">路由转发细则 <a class="header-anchor" href="#路由转发细则" aria-hidden="true">#</a></h3><p>我们通过引用任务类 <code>Task</code> 向各个平台通信。具体例子如下：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> task</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">task_meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">child</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">__plugin_name__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward_reprocess</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TaskHeader</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Callback</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">role</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Task</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">queue</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">platform</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">send_task</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">TaskHeader</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">sender</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">task</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">sender</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">  </span><span style="color:#676E95;font-style:italic;"># 继承发送者</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">receiver</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">  </span><span style="color:#676E95;font-style:italic;"># 因为可能有转发，所以可以单配</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">task_meta</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">_meta</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#89DDFF;">=[</span></span>
<span class="line"><span style="color:#82AAFF;">            RawMessage</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#A6ACCD;font-style:italic;">user_id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">user_id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#A6ACCD;font-style:italic;">chat_id</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">receiver</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">chat_id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                </span><span style="color:#A6ACCD;font-style:italic;">text</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">_search_result</span></span>
<span class="line"><span style="color:#82AAFF;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">        </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>其中，<code>task_meta</code> 参数必须由函数传递的 <code>task_meta</code> 的 <code>child</code> 函数克隆过来。</p><p>一般有以下几种模式：</p><h4 id="转发重新处理" tabindex="-1">转发重新处理 <a class="header-anchor" href="#转发重新处理" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward_reprocess</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> TaskHeader</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">Meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Callback</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">role</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">__plugin_name__</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>转发后由 <code>callback</code> 覆盖消息发送者，同时 <code>callback_forward</code> 是 <code>True</code> 的话，转发到插件处理区，回写进消息记录。</p><p><code>callback_forward_reprocess</code> 是 <code>True</code> 的话，由 llm 在<strong>禁用函数功能</strong>的情况下，检视消息内容。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>禁止修改 <code>continue_step</code> 和 <code>limit_child</code> 属性，影响递归深度。</p></div><h4 id="转发" tabindex="-1">转发 <a class="header-anchor" href="#转发" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">callback_forward</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True</span></span>
<span class="line"><span style="color:#A6ACCD;">_meta</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">reprocess_needed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span></span>
<span class="line"></span></code></pre></div><h2 id="注册-entrypoint-group" tabindex="-1">注册 EntryPoint Group <a class="header-anchor" href="#注册-entrypoint-group" aria-hidden="true">#</a></h2><p><a href="https://python-poetry.org/docs/pyproject/#plugins" target="_blank" rel="noreferrer">https://python-poetry.org/docs/pyproject/#plugins</a></p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">plugins</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">&quot;llmkira</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">extra</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">plugin&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># The entrypoint name is the name of the plugin.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 前面和后面都要唯一，注册钩子的时候会用到</span></span>
<span class="line"><span style="color:#A6ACCD;">bilisearch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">llmbot_plugin_bilisearch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>等号的后面是插件的包名，前面是唯一键（请确保不会与其他插件冲突）</p><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">tool</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">poetry</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">llmbot_plugin_bilisearch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>你必须注册 EntryPoint 才能被机器人启动程序检索到。</p></div><h2 id="发布包" tabindex="-1">发布包 <a class="header-anchor" href="#发布包" aria-hidden="true">#</a></h2><p><code>poetry publish</code> 发布包，或者使用 CI 自动发布。</p><h3 id="包管理说明" tabindex="-1">包管理说明 <a class="header-anchor" href="#包管理说明" aria-hidden="true">#</a></h3><p>每次升级时，都要更新 <code>version</code> 字段。</p><h3 id="ci自动发布" tabindex="-1">CI自动发布 <a class="header-anchor" href="#ci自动发布" aria-hidden="true">#</a></h3><p>在 <code>.github/workflows/publish.yml</code> 文件中写入如下内容：</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">tags</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">release</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">actions/checkout@v3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Publish python package</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">JRubics/poetry-publish@v1.16</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">pypi_token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ secrets.PYPI_TOKEN }}</span></span>
<span class="line"></span></code></pre></div><p>仓库主界面右下角新建 <code>Release</code></p>`,76),e=[o];function t(c,r,y,i,D,F){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
